"""
Generated By Github Copilot

Prophetのハイパーパラメータチューニング改修のテスト
"""

from module.its_analysis import ITSModelProphet
import sys
import pandas as pd
import statsmodels.api as sm
import warnings

# Prophetの警告を抑制
warnings.filterwarnings('ignore')

# モジュールのインポート
sys.path.insert(0, 'src')


print("=" * 80)
print("Prophet ハイパーパラメータチューニング改修テスト")
print("=" * 80)

# テストデータの準備
print("\n[1/2] テストデータの準備...")
cigar = sm.datasets.get_rdataset("Cigar", "Ecdat").data
state = [3]
timestamp = [75, 80]

usecols = ['state', 'year', 'price', 'pop', 'sales']
cigar_model = cigar.loc[(cigar['state'].isin(state)) &
                        (cigar['year'] >= 65), usecols].copy()

print(f"  データサイズ: {cigar_model.shape}")
print(f"  介入ポイント: {timestamp}")
print(f"  介入前データ: {len(cigar_model[cigar_model['year'] < 75])} サンプル")

# Prophetモデルのチューニングテスト
print("\n[2/2] Prophetモデルのチューニングテスト...")
print("  ※ 少ない試行回数で実行します（5回）")

try:
    model_prophet = ITSModelProphet(
        time_column='year',
        intervention_points=timestamp
    )

    # Optunaチューニングを有効にして実行
    model_prophet.fit(
        cigar_model,
        target_column='sales',
        tune_with_optuna=True,
        n_trials=5  # テストなので少なめ
    )

    print("\n  ✅ チューニング成功！")
    print(f"  最適パラメータ: {model_prophet.best_params}")

    # プラセボCVも実行してみる
    print("\n  プラセボCVも実行...")
    placebo_results = model_prophet.placebo_cross_validate(
        cigar_model,
        target_column='sales',
        n_placebo_points=2
    )

    print(f"    - プラセボ効果の平均: {placebo_results['mean_placebo_effect']:.3f}")
    print(f"    - p値: {placebo_results['p_value']:.3f}")
    print(
        f"    - モデル妥当性: {'✅ OK' if placebo_results['is_valid'] else '⚠️ 要確認'}")

except Exception as e:
    print(f"  ❌ テスト失敗: {e}")
    import traceback
    traceback.print_exc()

print("\n" + "=" * 80)
print("テスト完了！")
print("=" * 80)
